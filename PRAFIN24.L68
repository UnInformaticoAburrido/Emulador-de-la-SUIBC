0000101E Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 24/5/2024 19:24:38

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : PRAFIN24
00000000                             3  * Written by : Dimitry Comapny Cifre
00000000                             4  * Date       : 26/05/2024
00000000                             5  * Description: Emulador de la SUIBC
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG $1000
00001000= A807 7012 2050 4...        8  EMEM:   DC.W $A807,$7012,$2050,$4860,$C000,$4460,$C000,$0001
00001010= 0000                       9  EIR:    DC.W 0 ;eregistro de instruccion
00001012= 0000                      10  EPC:    DC.W 0 ;econtador de programa
00001014= 0000                      11  ER0:    DC.W 0 ;eregistro R0
00001016= 0000                      12  ER1:    DC.W 0 ;eregistro R1
00001018= 0000                      13  ER2:    DC.W 0 ;eregistro R2
0000101A= 0000                      14  ER3:    DC.W 0 ;eregistro R3
0000101C= 0000                      15  ESR:    DC.W 0 ;eregistro de estado (00000000 00000ZNC)
0000101E                            16  
0000101E                            17  START:
0000101E  4278 1012                 18      CLR.W EPC
00001022                            19  
00001022                            20  FETCH:
00001022                            21      ;--- IFETCH: INICIO FETCH
00001022                            22          ;*** En esta seccion debeis introducir el codigo necesario para cargar
00001022                            23          ;*** en el EIR la siguiente instruccion a ejecutar, indicada por el EPC,
00001022                            24          ;*** y dejar listo el EPC para que apunte a la siguiente instruccion
00001022  524C                      25          ADDQ.W #1, A4
00001024  3078 1012                 26      MOVE.W EPC,A0
00001028  3028 1000                 27      MOVE.W EMEM(A0), D0
0000102C  31C0 1010                 28      MOVE.W D0, EIR
00001030  5478 1012                 29      ADDQ.W #2,EPC
00001034                            30  
00001034                            31  
00001034                            32      ;--- FFETCH: FIN FETCH
00001034                            33      
00001034                            34      
00001034                            35      
00001034                            36      
00001034                            37      ;--- IBRDECOD: INICIO SALTO A DECOD
00001034                            38          ;*** En esta seccion debeis preparar la pila para llamar a la subrutina
00001034                            39          ;*** DECOD, llamar a la subrutina, y vaciar la pila correctamente,
00001034                            40          ;*** almacenando el resultado de la decodificacion en D1al grupo corespondiente
00001034                            41  
00001034                            42              ;Preparamos stack
00001034  554F                      43              SUBQ.W #2, SP
00001036  3F38 1010                 44              MOVE.W EIR, -(SP)
0000103A                            45              ;Llamamos a decod de libreria
0000103A  4EB9 000010FE             46              JSR    DECOD
00001040  544F                      47              ADDQ.W #2, SP
00001042  321F                      48              MOVE.W (SP)+, D1
00001044                            49              ;Recogemos resultados del stack
00001044                            50  
00001044                            51          
00001044                            52      ;--- FBRDECOD: FIN SALTO A DECOD
00001044                            53      
00001044                            54      
00001044                            55      
00001044                            56      ;--- IBREXEC: INICIO SALTO A FASE DE EJECUCION
00001044                            57          ;*** Esta seccion se usa para saltar a la fase de ejecucion
00001044                            58          ;*** NO HACE FALTA MODIFICARLA
00001044  C2FC 0006                 59      MULU #6,D1
00001048  2241                      60      MOVEA.L D1,A1
0000104A  4EE9 104E                 61      JMP JMPLIST(A1)
0000104E                            62  JMPLIST:
0000104E  4EF9 0000109C             63      JMP ESTO
00001054  4EF9 000010A2             64      JMP ELOA
0000105A  4EF9 000010AA             65      JMP ECMP
00001060  4EF9 000010B2             66      JMP EADD
00001066  4EF9 000010BA             67      JMP ESUB
0000106C  4EF9 000010C2             68      JMP ENOR
00001072  4EF9 000010CA             69      JMP ESET
00001078  4EF9 000010D2             70      JMP EADQ
0000107E  4EF9 000010DA             71      JMP ETRA
00001084  4EF9 000010E2             72      JMP EJMZ
0000108A  4EF9 000010EA             73      JMP EJMN
00001090  4EF9 000010F2             74      JMP EJMI
00001096  4EF9 000010FA             75      JMP EHLT
0000109C                            76      ;--- FBREXEC: FIN SALTO A FASE DE EJECUCION
0000109C                            77      
0000109C                            78      
0000109C                            79      
0000109C                            80      ;--- IEXEC: INICIO EJECUCION
0000109C                            81          ;*** En esta seccion debeis implementar la ejecucion de cada einstr.
0000109C                            82      
0000109C                            83      ; ESCRIBID EN CADA ETIQUETA LA FASE DE EJECUCION DE CADA INSTRUCCION
0000109C                            84  ESTO:
0000109C  3C7C 0001                 85      MOVE.W #1,A6
000010A0  6080                      86      BRA FETCH
000010A2                            87  ELOA:
000010A2  3C7C 0002                 88      MOVE.W #2,A6
000010A6  6000 FF7A                 89      BRA FETCH
000010AA                            90  ECMP:
000010AA  3C7C 0003                 91      MOVE.W #3,A6
000010AE  6000 FF72                 92      BRA FETCH
000010B2                            93  EADD:
000010B2  3C7C 0004                 94      MOVE.W #4,A6
000010B6  6000 FF6A                 95      BRA FETCH
000010BA                            96  ESUB:
000010BA  3C7C 0005                 97      MOVE.W #5,A6
000010BE  6000 FF62                 98      BRA FETCH
000010C2                            99  ENOR:
000010C2  3C7C 0006                100      MOVE.W #6,A6
000010C6  6000 FF5A                101      BRA FETCH
000010CA                           102  ESET:
000010CA  3C7C 0006                103      MOVE.W #6,A6
000010CE  6000 FF52                104      BRA FETCH
000010D2                           105  EADQ:
000010D2  3C7C 0007                106      MOVE.W #7,A6
000010D6  6000 FF4A                107      BRA FETCH
000010DA                           108  ETRA:
000010DA  3C7C 0008                109      MOVE.W #8,A6
000010DE  6000 FF42                110      BRA FETCH
000010E2                           111  EJMZ:
000010E2  3C7C 0009                112      MOVE.W #9,A6
000010E6  6000 FF3A                113      BRA FETCH
000010EA                           114  EJMN:
000010EA  3C7C 000A                115      MOVE.W #10,A6
000010EE  6000 FF32                116      BRA FETCH
000010F2                           117  EJMI:
000010F2  3C7C 000B                118      MOVE.W #11,A6
000010F6  6000 FF2A                119      BRA FETCH
000010FA                           120  EHLT:
000010FA  FFFF FFFF                121      SIMHALT
000010FE                           122      ;--- FEXEC: FIN EJECUCION
000010FE                           123      
000010FE                           124      
000010FE                           125  
000010FE                           126      ;--- ISUBR: INICIO SUBRUTINAS
000010FE                           127          ;*** Aqui debeis incluir las subrutinas que necesite vuestra solucion
000010FE                           128          ;*** SALVO DECOD, que va en la siguiente seccion
000010FE                           129  
000010FE                           130              ; ESCRIBID VUESTRO CODIGO AQUI
000010FE                           131          
000010FE                           132      ;--- FSUBR: FIN SUBRUTINAS
000010FE                           133      
000010FE                           134      
000010FE                           135  
000010FE                           136      ;--- IDECOD: INICIO DECOD
000010FE                           137          ;*** Tras la etiqueta DECOD, debeis implementar la subrutina de 
000010FE                           138          ;*** decodificacion, que debera ser de libreria, siguiendo la interfaz
000010FE                           139          ;*** especificada en el enunciado
000010FE                           140  DECOD:
000010FE  2F00                     141      MOVE.L D0,-(SP)       ; Cargar el valor de D0 en stack
00001100  2F07                     142      MOVE.L D7,-(SP)      ; Cargar el valor de D7 en stack
00001102  302F 000C                143      MOVE.W 12(SP),D0
00001106  0800 000F                144      BTST #15,D0           ; Comprobar si el bit 15 de D0 es 1
0000110A  6600 000E                145      BNE GM                ; Saltar a GM si Z=1 (bit 15 es 0)
0000110E                           146      
0000110E                           147      ; Comprobar las funciones de ALU y JUMP
0000110E                           148      ; Comprobar el primer uno localizado
0000110E  0800 000E                149      BTST #14,D0           ; Comprobar si el bit 14 de D0 es 1
00001112  6600 0020                150      BNE ALU
00001116  6000 0046                151      BRA JUMP
0000111A                           152  
0000111A                           153  GM:
0000111A  0800 000E                154      BTST #14,D0            ; Comprobar si el bit 5 de D0 es 1
0000111E  6600 00C2                155      BNE HTL
00001122  0800 000D                156      BTST #13,D0            ; Comprobar si el bit 4 de D0 es 1
00001126  6600 00B0                157      BNE LOA
0000112A                           158      ; Devolver STO como predeterminado
0000112A  3F7C 0000 000E           159      MOVE.W #0,14(SP)
00001130  6000 00BA                160      BRA FINDEC
00001134                           161  
00001134                           162  ALU:
00001134  0800 000D                163      BTST #13,D0           ; Comprobar si el bit 13 de D0 es 1
00001138  6600 006E                164      BNE ADQTRA
0000113C  0800 000C                165      BTST #12,D0           ; Comprobar si el bit 12 de D0 es 1
00001140  6600 005C                166      BNE SET
00001144  0800 000B                167      BTST #11,D0           ; Comprobar si el bit 11 de D0 es 1
00001148  6600 0038                168      BNE SUBNOR
0000114C  0800 000A                169      BTST #10,D0           ; Comprobar si el bit 10 de D0 es 1
00001150  6600 0026                170      BNE ADD
00001154                           171      *Devolver la orden CMP
00001154  3F7C 0002 000E           172      MOVE.W #2,14(SP)
0000115A  6000 0090                173      BRA FINDEC
0000115E                           174  
0000115E                           175  JUMP:
0000115E  0800 000D                176      BTST #13,D0            ; Comprobar si el bit 7 de D0 es 1
00001162  6600 0060                177      BNE JMI
00001166  0800 000C                178      BTST #12,D0            ; Comprobar si el bit 6 de D0 es 1
0000116A  6600 0062                179      BNE JMN
0000116E                           180      *Devolver el JMZ
0000116E  3F7C 0009 000E           181      MOVE.W #9,14(SP)
00001174  6000 0076                182      BRA FINDEC
00001178                           183  
00001178                           184  ADD:
00001178  3F7C 0003 000E           185      MOVE.W #3,14(SP)
0000117E  6000 006C                186      BRA FINDEC
00001182                           187  
00001182                           188  SUBNOR:
00001182  0800 0009                189      BTST #9,D0            ; Comprobar si el bit 9 de D0 es 1
00001186  6600 000C                190      BNE NOR
0000118A                           191      *Devolver la orden SUB
0000118A  3F7C 0004 000E           192      MOVE.W #4,14(SP)
00001190  6000 005A                193      BRA FINDEC
00001194                           194  
00001194                           195  NOR:
00001194  3F7C 0005 000E           196      MOVE.W #5,14(SP)
0000119A  6000 0050                197      BRA FINDEC
0000119E                           198  
0000119E                           199  SET:
0000119E  3F7C 0006 000E           200      MOVE.W #6,14(SP)
000011A4  6000 0046                201      BRA FINDEC
000011A8                           202  
000011A8                           203  ADQTRA:
000011A8  0800 000C                204      BTST #12,D0            ; Comprobar si el bit 8 de D0 es 1
000011AC  6600 000C                205      BNE TRA
000011B0                           206      ; Devolver ADQ
000011B0  3F7C 0007 000E           207      MOVE.W #7,14(SP)
000011B6  6000 0034                208      BRA FINDEC
000011BA                           209  
000011BA                           210  TRA:
000011BA  3F7C 0008 000E           211      MOVE.W #8,14(SP)
000011C0  6000 002A                212      BRA FINDEC
000011C4                           213  
000011C4                           214  
000011C4                           215  JMI:
000011C4  3F7C 000B 000E           216      MOVE.W #11,14(SP)
000011CA  6000 0020                217      BRA FINDEC
000011CE                           218  
000011CE                           219  JMN:
000011CE  3F7C 000A 000E           220      MOVE.W #10,14(SP)
000011D4  6000 0016                221      BRA FINDEC
000011D8                           222  
000011D8                           223  LOA:
000011D8  3F7C 0001 000E           224      MOVE.W #1,14(SP)
000011DE  6000 000C                225      BRA FINDEC
000011E2                           226  
000011E2                           227  HTL:
000011E2  3F7C 000C 000E           228      MOVE.W #12, 14(SP)
000011E8  6000 0002                229      BRA FINDEC
000011EC                           230  
000011EC                           231  FINDEC:
000011EC  2E1F                     232      MOVE.L (SP)+,D7      ; Restaurar D7
000011EE  201F                     233      MOVE.L (SP)+,D0        ; Restaurar D0
000011F0  4E75                     234      RTS                   ; Retornar
000011F2                           235  
000011F2                           236      ;--- FDECOD: FIN DECOD
000011F2                           237      END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADD                 1178
ADQTRA              11A8
ALU                 1134
DECOD               10FE
EADD                10B2
EADQ                10D2
ECMP                10AA
EHLT                10FA
EIR                 1010
EJMI                10F2
EJMN                10EA
EJMZ                10E2
ELOA                10A2
EMEM                1000
ENOR                10C2
EPC                 1012
ER0                 1014
ER1                 1016
ER2                 1018
ER3                 101A
ESET                10CA
ESR                 101C
ESTO                109C
ESUB                10BA
ETRA                10DA
FETCH               1022
FINDEC              11EC
GM                  111A
HTL                 11E2
JMI                 11C4
JMN                 11CE
JMPLIST             104E
JUMP                115E
LOA                 11D8
NOR                 1194
SET                 119E
START               101E
SUBNOR              1182
TRA                 11BA
