0000100C Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 20/5/2024 9:44:11

00000000                             1  *------------------------------------------------
00000000                             2  * Titulo : P1 (2023-2024) - Sieve of Eratosthenes
00000000                             3  * Autores: Dimitry Comapny Cifre
00000000                             4  *------------------------------------------------
00001000                             5      ORG $1000
00001000  =0000000A                  6  N: EQU 10
00001000                             7  P: DS.B N
0000100A                             8      DS.W 0
0000100A                             9  C: DS.W 1
0000100C                            10  *------------------------------------------------
0000100C                            11  START:
0000100C  123C 000A                 12      MOVE.B #N,D1
00001010  5301                      13      SUBQ.B #1,D1
00001012  41F8 1000                 14      LEA P,A0
00001016  103C 0001                 15      MOVE.B #1,D0
0000101A                            16  GL:
0000101A  10C0                      17      MOVE.B D0, (A0)+
0000101C  5200                      18      ADDQ.B #1,D0
0000101E  51C9 FFFA                 19      DBRA D1,GL
00001022  4281                      20      CLR.L D1 *Limpiamos el registro D1 para evitar problemas problemas durante la ejecucion
00001024  5603                      21      ADDQ.B #3,D3
00001026  183C 000A                 22      MOVE.B #N,D4
0000102A  9803                      23      SUB.B D3,D4
0000102C  41F8 1000                 24      LEA P,A0
00001030  47F8 100A                 25      LEA C,A3 *ALMACENAMOS C EN A3
00001034  5242                      26      ADDQ #1,D2
00001036                            27  BucleDivisor:
00001036  5248                      28      ADDQ #1,A0
00001038  1210                      29      MOVE.B (A0),D1
0000103A  4A01                      30      TST.B D1 *Evitamos que el divisor pueda llegar a ser 0
0000103C  6700 002E                 31      BEQ DESCARTE
00001040  43F8 1000                 32      LEA P,A1
00001044  7A0A                      33      MOVE.L #N,D5 *Uso un long para sobre escribir los bits residuales
00001046                            34  BucleDividendo:
00001046  5249                      35      ADDQ #1,A1
00001048  1011                      36      MOVE.B (A1),D0
0000104A  4A00                      37      TST.B D0 *Comprovamos que D0 no es igual a 0
0000104C  6700 001A                 38      BEQ CERO
00001050  B240                      39      CMP.W D0,D1 *Comaprovamos que el divisor y el dividendo no son iguales
00001052  6700 0014                 40      BEQ CERO
00001056  80C1                      41      DIVU.W D1,D0 *Dividimos los dos numeros
00001058  E088                      42      LSR.L #8,D0 *Realizamos la operacion de LSR dos veces para moverlo 16 bits
0000105A  E088                      43      LSR.L #8,D0 *Lo realizo dos veces no me ha quedado muy claro si es por deficiencia de 68K o del simulador
0000105C  B07C 0000                 44      CMP.W #0,D0
00001060  6E00 0006                 45      BGT CERO *En caso de que D0 sea superior  a 0 nos saltamos la siguiente instrucion
00001064  12BC 0000                 46              MOVE.B #0,(A1)
00001068                            47  CERO:
00001068  51CD FFDC                 48      DBRA D5,BucleDividendo
0000106C                            49  DESCARTE:
0000106C  51CC FFC8                 50      DBRA D4,BucleDivisor
00001070                            51      *Vamos a contar todos los numeros diferentes a 0 (primos)
00001070  4282                      52      CLR.L D2 *Limpiamos d2
00001072  41F8 1000                 53      LEA P,A0
00001076  123C 000A                 54          MOVE.B #N,D1
0000107A                            55  CONTAR:
0000107A  1010                      56          MOVE.B (A0),D0
0000107C  B07C 0000                 57          CMP.W #0,D0 *Comparamos si el componente interno de D0 es igual a 0
00001080  6700 0004                 58          BEQ NOCONTAR *En caso de que D0 !=0 nos saltamos la sigueite instruccion
00001084  5242                      59          ADDQ #1,D2
00001086                            60  NOCONTAR:
00001086  5248                      61          ADDQ #1,A0 *Movemos el puntero al sigueite elemento
00001088  51C9 FFF0                 62      DBRA  D1,CONTAR
0000108C  3482                      63      MOVE.W D2,(A2) *Almacenamos el valor de nuestro contador a C
0000108E  FFFF FFFF                 64      SIMHALT
00001092                            65  
00001092                            66      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
BUCLEDIVIDENDO      1046
BUCLEDIVISOR        1036
C                   100A
CERO                1068
CONTAR              107A
DESCARTE            106C
GL                  101A
N                   A
NOCONTAR            1086
P                   1000
START               100C
